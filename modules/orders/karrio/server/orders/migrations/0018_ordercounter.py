# Generated by Django 5.2.7 on 2025-10-05 23:24

import functools
import karrio.server.core.models.base
from django.db import migrations, models


def initialize_counters(apps, schema_editor):
    """Initialize counters for existing organizations based on their highest order_id"""
    from django.conf import settings

    OrderCounter = apps.get_model('orders', 'OrderCounter')
    Order = apps.get_model('orders', 'Order')

    # Check if multi-org is enabled
    if not settings.MULTI_ORGANIZATIONS:
        return

    try:
        # Get the through table for the org-order relationship
        # This will be available in the multi-org setup
        OrderLink = apps.get_model('orgs', 'OrderLink')

        # Get all unique org_id + test_mode combinations
        orgs_with_orders = OrderLink.objects.values('org_id').distinct()

        for org_data in orgs_with_orders:
            org_id = org_data['org_id']

            # Process both test and production modes
            for test_mode in [False, True]:
                # Find all orders for this org + test_mode
                order_links = OrderLink.objects.filter(org_id=org_id)
                order_ids = order_links.values_list('item_id', flat=True)

                orders = Order.objects.filter(
                    id__in=order_ids,
                    test_mode=test_mode,
                    source='draft',
                    order_id__startswith='1'
                )

                max_counter = 0
                for order in orders:
                    try:
                        # Extract numeric part (remove leading "1")
                        numeric_part = int(order.order_id[1:])
                        max_counter = max(max_counter, numeric_part)
                    except (ValueError, IndexError):
                        pass

                # Only create counter if there are existing orders
                if max_counter > 0:
                    OrderCounter.objects.create(
                        org_id=org_id,
                        test_mode=test_mode,
                        counter=max_counter
                    )
    except LookupError:
        # OrderLink model doesn't exist (not multi-org setup)
        pass


class Migration(migrations.Migration):

    dependencies = [
        ("orders", "0017_order_order_created_at_idx"),
    ]

    operations = [
        migrations.CreateModel(
            name="OrderCounter",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=functools.partial(
                            karrio.server.core.models.base.uuid,
                            *(),
                            **{"prefix": "octx_"}
                        ),
                        editable=False,
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("org_id", models.CharField(db_index=True, max_length=50)),
                ("test_mode", models.BooleanField(default=False)),
                ("counter", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "order_counter",
                "indexes": [
                    models.Index(
                        fields=["org_id", "test_mode"], name="order_counter_org_idx"
                    )
                ],
                "unique_together": {("org_id", "test_mode")},
            },
        ),
        migrations.RunPython(initialize_counters, reverse_code=migrations.RunPython.noop),
    ]
