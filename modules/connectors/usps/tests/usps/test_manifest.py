import unittest
from unittest.mock import patch, ANY
from .fixture import gateway
import logging as logger

import karrio.sdk as karrio
import karrio.lib as lib
import karrio.core.models as models


class TestUSPSManifest(unittest.TestCase):
    def setUp(self):
        self.maxDiff = None
        self.ManifestRequest = models.ManifestRequest(**ManifestPayload)

    def test_create_tracking_request(self):
        request = gateway.mapper.create_manifest_request(self.ManifestRequest)
        logger.debug(request.serialize())
        self.assertEqual(request.serialize(), ManifestRequest)

    def test_create_manifest(self):
        with patch("karrio.mappers.usps.proxy.lib.request") as mock:
            mock.return_value = "{}"
            karrio.Manifest.create(self.ManifestRequest).from_(gateway)

            self.assertEqual(
                mock.call_args[1]["url"],
                f"{gateway.settings.server_url}/scan-forms/v3/scan-form",
            )

    def test_parse_manifest_response(self):
        with patch("karrio.mappers.usps.proxy.lib.request") as mock:
            mock.return_value = ManifestResponse
            parsed_response = (
                karrio.Manifest.create(self.ManifestRequest).from_(gateway).parse()
            )
            logger.debug(lib.to_dict(parsed_response))
            self.assertListEqual(lib.to_dict(parsed_response), ParsedManifestResponse)


if __name__ == "__main__":
    unittest.main()


ManifestPayload = {
    "shipment_identifiers": ["794947717776"],
    "address": {
        "company_name": "ABC Corp.",
        "address_line1": "1098 N Fraser Street",
        "city": "Georgetown",
        "postal_code": "29440",
        "country_code": "US",
        "person_name": "Tall Tom",
        "phone_number": "8005554526",
        "state_code": "SC",
    },
    "options": {"shipment_date": "2024-07-28"},
}

ParsedManifestResponse = [
    {
        "carrier_id": "usps",
        "carrier_name": "usps",
        "doc": {"manifest": ANY},
        "meta": {"manifestNumber": "string", "trackingNumbers": ["string"]},
    },
    [],
]


ManifestRequest = {
    "destinationEntryFacilityType": "NONE",
    "entryFacilityZIPCode": "29440",
    "form": "5630",
    "fromAddress": {
        "ZIPCode": "29440",
        "city": "Georgetown",
        "firm": "ABC Corp.",
        "firstName": "Tall",
        "ignoreBadAddress": False,
        "lastName": "Tom",
        "streetAddress": "1098 N Fraser Street",
    },
    "imageType": "PDF",
    "labelType": "8.5x11LABEL",
    "mailingDate": "2024-07-28",
    "overwriteMailingDate": False,
    "shipment": {"trackingNumbers": ["794947717776"]},
}


ManifestResponse = """{
  "SCANFormMetadata": {
    "form": "5630",
    "imageType": "PDF",
    "labelType": "8.5x11LABEL",
    "mailingDate": "2019-08-24",
    "overwriteMailingDate": false,
    "entryFacilityZIPCode": "20260",
    "destinationEntryFacilityType": "NONE",
    "shipment": {},
    "manifestNumber": "string",
    "trackingNumbers": ["string"],
    "fromAddress": {
      "ignoreBadAddress": true,
      "streetAddress": "string",
      "streetAddressAbbreviation": "string",
      "secondaryAddress": "string",
      "cityAbbreviation": "string",
      "city": "string",
      "state": "st",
      "ZIPCode": "string",
      "ZIPPlus4": "string",
      "urbanization": "string",
      "firstName": "string",
      "lastName": "string",
      "firm": "string"
    }
  },
  "SCANFormImage": ""
}
"""
